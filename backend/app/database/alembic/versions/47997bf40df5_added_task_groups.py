"""Added task groups

Revision ID: 47997bf40df5
Revises: 442a66363360
Create Date: 2025-03-23 20:10:43.804744

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '47997bf40df5'
down_revision: Union[str, None] = '442a66363360'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('TaskGroup',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=False),
    sa.Column('code', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__TaskGroup')),
    sa.UniqueConstraint('code', name=op.f('uq__TaskGroup__code')),
    sa.UniqueConstraint('id', name=op.f('uq__TaskGroup__id'))
    )
    op.create_table('UserToGroup',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('group_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['TaskGroup.id'], name=op.f('fk__UserToGroup__group_id__TaskGroup')),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name=op.f('fk__UserToGroup__user_id__Users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__UserToGroup')),
    sa.UniqueConstraint('id', name=op.f('uq__UserToGroup__id'))
    )
    op.create_index(op.f('ix__UserToGroup__user_id'), 'UserToGroup', ['user_id'], unique=False)
    op.add_column('Schedule', sa.Column('group_id', sa.UUID(), nullable=True))
    op.create_index(op.f('ix__Schedule__group_id'), 'Schedule', ['group_id'], unique=False)
    op.create_foreign_key(op.f('fk__Schedule__group_id__TaskGroup'), 'Schedule', 'TaskGroup', ['group_id'], ['id'])
    op.alter_column('Settings', 'start_working',
               existing_type=postgresql.TIME(timezone=True),
               type_=sa.Time(),
               existing_nullable=True)
    op.alter_column('Settings', 'end_working',
               existing_type=postgresql.TIME(timezone=True),
               type_=sa.Time(),
               existing_nullable=True)
    op.create_index(op.f('ix__Settings__user_id'), 'Settings', ['user_id'], unique=False)
    op.create_unique_constraint(op.f('uq__Settings__id'), 'Settings', ['id'])
    op.create_foreign_key(op.f('fk__Settings__user_id__Users'), 'Settings', 'Users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk__Settings__user_id__Users'), 'Settings', type_='foreignkey')
    op.drop_constraint(op.f('uq__Settings__id'), 'Settings', type_='unique')
    op.drop_index(op.f('ix__Settings__user_id'), table_name='Settings')
    op.alter_column('Settings', 'end_working',
               existing_type=sa.Time(),
               type_=postgresql.TIME(timezone=True),
               existing_nullable=True)
    op.alter_column('Settings', 'start_working',
               existing_type=sa.Time(),
               type_=postgresql.TIME(timezone=True),
               existing_nullable=True)
    op.drop_constraint(op.f('fk__Schedule__group_id__TaskGroup'), 'Schedule', type_='foreignkey')
    op.drop_index(op.f('ix__Schedule__group_id'), table_name='Schedule')
    op.drop_column('Schedule', 'group_id')
    op.drop_index(op.f('ix__UserToGroup__user_id'), table_name='UserToGroup')
    op.drop_table('UserToGroup')
    op.drop_table('TaskGroup')
    # ### end Alembic commands ###
